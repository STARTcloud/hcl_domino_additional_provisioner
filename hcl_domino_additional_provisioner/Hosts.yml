---
hosts:
  -
    settings:
      hostname: demo
      domain: startcloud.com
      server_id: '4020'
      vcpus: 4
      memory: 16G
      consoleport: 4020
      consolehost: 0.0.0.0
      box: 'STARTcloud/debian12-server'
      box_url: 'https://vagrantcloud.com'
      box_version: 0.0.6
      os_type: 'Debian_64'
      provider-type: virtualbox
      firmware_type: UEFI
      setup_wait: 300
      vagrant_user_private_key_path: ./id_rsa
      vagrant_user: startcloud
      vagrant_user_pass: 'XaVuzq2vRV4fTk'
      vagrant_insert_key: true
      ssh_forward_agent: true
      show_console: false #https://github.com/Moonshine-IDE/Super.Human.Installer/issues/98

    plugins:

    networks:
      #- type: host
      #  address: 10.244.244.2
      #  netmask: 255.255.255.0
      #  gateway: 10.244.244.1
      #  dhcp4: true
      #  dhcp6: false      
      #  type: virtio
      #  mac: auto
#      - type: host 
#        comment |
#              This is just a placeholder for the NAT interface that Vagrant has Virtualbox create upon every vagrant machine creation, 
#              It uses the first available Host-Only Virtualbox Interface. This NAT interface cannot be disabled.
#              The purpose of this NAT interface is documented here: https://developer.hashicorp.com/vagrant/docs/networking#there-is-a-nat-available
#              This interface for SHI is set to use 10.244.244.0/24 (10.244.244.0 - 10.244.244.255)
#              Remove This comment, do not enable it
#              https://github.com/hashicorp/vagrant/issues/10695
#              https://superuser.com/questions/398478/change-virtualbox-dhcp-to-issue-192-168-x-x-adresses-instead-of-10-0-x-x-adresse/398480#398480
#              https://developer.hashicorp.com/vagrant/docs/providers/virtualbox/networking
#              https://www.virtualbox.org/manual/ch06.html#network_internal
#              https://developer.hashicorp.com/vagrant/docs/networking/basic_usage
#              https://medium.com/@didin.ahmadi/setting-up-local-domain-with-vagrant-aa54ad8afb2
#              https://github.com/Moonshine-IDE/Super.Human.Installer/issues/115
      - type: external
        address: 192.168.2.227
        netmask: 255.255.255.0
        gateway: 192.168.2.1
        dhcp4: true
        dhcp6: false
        bridge:
        #type: virtio
        mac: auto
        dns:
          - nameserver: 1.1.1.1
          - nameserver: 1.0.0.1

    provisioning:
      ansible.builtin.shell:
        enabled: false
        scripts:
          - './scripts/aliases.sh'

      ansible:
        enabled: true
        scripts:
          - local:
              - script: ansible/generate-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                run: always
                remote_collections: false
              - script: ansible/playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                run: once
                remote_collections: false
              - script: ansible/always-playbook.yml # This Playbook runs any role below with the tag always, see https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_tags.html#special-tags-always-and-never 
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                run: not_first
                remote_collections: false
    folders:
      - map: .
        to: /vagrant
        type: virtualbox
        disabled: true
        automount: true
        description: "Disable VBoxSF"
      - map: ./provisioners/ansible/
        to: /vagrant/ansible/
        type: rsync
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'
      - map: ./installers/
        to: /vagrant/installers/
        type: rsync
      - map: ./ssls/
        to: /secure/
        type: rsync
      - map: ./safe-id-to-cross-certify/
        to: /safe-id-to-cross-certify/
        type: rsync
        syncback: true ## Not yet fully implemented, purpose is to tell rsync to reverse the replication.

    vars:
      ## You can set global role variables here, look in the defaults folders for hints as to variables used by roles
      debug_all: true
      ## --When using the default: demo.startcloud.com as the hostname and domain, we use the default-signed.crt certificates to provide a valid SSL--
      ## The former line, is being phased out, now the startcloud_roles.ssl role will generate a CA, and sign a server certificate for the servers to use.
      ## This CA root cert will need to be installed on the users machines, or they will need to bring their own SSL.
      ## If the hostname and domain, ie demo.startcloud.com do not match the certificate we provide (ie demo.startcloud.com in default-signed.crt), some services may not start (ie nomadweb)
      ## If a user does not mind using a self signed certificate for their development testing for their own domain  or are unable to replace the default-signed.crt files
      ## they would set the below value to true so that the vm creates a SSL crt with the valid hostname, so that when the service compares the hostname it is to listen on and
      ## the hostname the certificate is signed for it matches.
      selfsigned_enabled: false
      haproxy_ssl_redirect: true

      # Domino Configuration Variables
      domino_organization: STARTcloud # ::SERVER_ORGANIZATION::
      safe_notes_id: SAFE.ids # ::USER_SAFE_ID:: 
      domino_admin_notes_id_password: "password"
      domino_server_clustermates: 0 # ::DOMINO_SERVER_CLUSTERMATES::
     
      domino_server_installer_tar: Domino_14.0_Linux_English.tar
      #domino_server_installer_tar: Domino_12.0.2_Linux_English.tar
      domino_major_version: 14 # "12"
      domino_minor_version: 0 # "0"
      domino_patch_version: 0 # "2"

      # Domino fixpack Variables
      #domino_fp_hash: ::DOMINO_FP_HASH:: # "124153dfbb571b1284ac4248"
      #domino_server_installer_tar: ::DOMINO_INSTALLER:: # "Domino_12.0.2_Linux_English.tar"
      domino_installer_fixpack_install: true
      domino_fixpack_version: FP1
      domino_server_fixpack_tar: Domino_140FP1_Linux.tar

      # Additional server options
      is_additional_server: false # ::DOMINO_IS_ADDITIONAL_INSTANCE::
      #use_existing_server_id:  false # ::DOMINO_SERVER_CLUSTERMATE_ID_USE::
      #existing_server_id: "demo1.id" # ::DOMINO_SERVER_CLUSTERMATES_ID:: 
      #existing_server: "demo0.startcloud.com" # ::DOMINO_SERVER_CLUSTERMATE_SERVER:: 
      #existing_server_ip: "192.168.2.227" # ::DOMINO_SERVER_CLUSTERMATE_IP:: 

      genesis_packages:
        - netmonitor
        - SuperHumanPortal

      ## ORGNAME_CUSTOMCOLLECTION_variables:
      ## Define Variables that the ORGNAME.CUSTOMCOLLECTION Roles will use if any.

    collections: ## Note to SHI Devs, this is new and is required
      - startcloud.startcloud_roles
      - startcloud.hcl_roles
#      - moonshine.moonshine_roles 

    roles:
      - name: startcloud.startcloud_roles.setup
      - name: startcloud.startcloud_roles.networking
        tags: always
      - name: startcloud.startcloud_roles.hostname
      - name: startcloud.startcloud_roles.dependencies
      - name: startcloud.startcloud_roles.service_user
      - name: startcloud.startcloud_roles.sdkman_install
      - name: startcloud.startcloud_roles.sdkman_java
      - name: startcloud.startcloud_roles.sdkman_maven
      - name: startcloud.startcloud_roles.sdkman_gradle
      - name: startcloud.startcloud_roles.ssl
      #- name: startcloud.hcl_roles.domino_reset
      - name: startcloud.hcl_roles.domino_install
      - name: startcloud.hcl_roles.domino_vagrant_rest_api 
      - name: startcloud.hcl_roles.domino_service_nash
      - name: startcloud.hcl_roles.domino_java_config
      #- name: startcloud.hcl_roles.domino_java_tools
      - name: startcloud.hcl_roles.domino_updatesite
      - name: startcloud.hcl_roles.domino_config 
      - name: startcloud.hcl_roles.domino_genesis
      - name: startcloud.hcl_roles.domino_genesis_applications
      #- name: startcloud.hcl_roles.domino_cross_certify
      #- name: startcloud.hcl_roles.domino_java_app_example ## Uncomment Me to build your own Domino Java Servlet
      - name: startcloud.hcl_roles.domino_leap #  ::ROLE_LEAP:: 
      #- name: startcloud.hcl_roles.domino_nomadweb # ::ROLE_NOMADWEB:: 
      - name: startcloud.hcl_roles.domino_traveler #  ::ROLE_TRAVELER:: 
      - name: startcloud.hcl_roles.domino_traveler_htmo #  ::ROLE_TRAVELER_HTMO:: 
      - name: startcloud.hcl_roles.domino_verse #  ::ROLE_VERSE:: 
      - name: startcloud.hcl_roles.domino_appdevpack #  ::ROLE_APPDEVPACK:: 
      - name: startcloud.hcl_roles.domino_rest_api #  ::ROLE_RESTAPI:: ## Note to SHI devs, This should be called ROLE_DOMINO_RESTAPI, as this is different than startcloud.hcl_roles.domino_vagrant_rest_api
      - name: startcloud.hcl_roles.domino_vagrant_readme
      #- name: startcloud.startcloud_roles.mariadb #  ::ROLE_MARIADB::  
      #- name: startcloud.hcl_roles.voltmx #  ::ROLE_VOLTMX::  
      - name: startcloud.startcloud_roles.quick_start # ::ROLE_STARTCLOUD_QUICK_START::
      #- name: ORGNAME.CUSTOMCOLLECTION.example_role # ::ROLE_STARTCLOUD_EXAMPLE_ROLE:: ## This is a role that people can look to clone for their own use
      #- name: startcloud.startcloud_roles.clone_private_git_repo # ::ROLE_PRIVATE_GIT_REPOSITORY::
      #  vars:
      #    github_org: "Moonshine-IDE" #::ROLE_PRIVATE_GIT_REPO_ORG::
      #    github_repo: "moonshine-vagrant-mxhx-demo" #::ROLE_PRIVATE_GIT_REPO::
      #    git_dest: "/vagrant/installers" #::ROLE_PRIVATE_GIT_REPO_DEST_PATH::
      #    git_vault_password: SomePass1234 #::ROLE_PRIVATE_GIT_REPO_VAULT_PASS::
      #    git_user: "MarkProminic" #::ROLE_PRIVATE_GIT_REPO_USER::
      #    github_token_file: vault.yml #::ROLE_PRIVATE_GIT_REPO_VAULT::
      #    git_build: true
      #    git_deploy: true
      #    github_branch: provisioner
      #    roles_to_run:
      #      - haxe_install
      #      - mxhx
      - name: startcloud.startcloud_roles.haproxy # ::ROLE_STARTCLOUD_HAPROXY::
      - name: startcloud.startcloud_roles.vagrant_readme # ::ROLE_STARTCLOUD_VAGRANT_README::
      - name: startcloud.startcloud_roles.lockdown ## New Role, changes default users SSH key, and password. Note this will break Ansibles ability to connect if its not the last role
